package com.example.testyourandroidsmartphone;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.os.Build;
import android.support.annotation.RequiresApi;
import android.support.constraint.ConstraintLayout;
import android.support.constraint.ConstraintSet;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;

import java.util.zip.Inflater;

public class ProgressBar extends RelativeLayout
{
    LayoutInflater inflater;
    View MyView;
    View Bare1;
    View Bare2;
    View Bare3;
    View Bare4;
    View Bare5;
    View Bare6;
    View Bare7;
    View Bare8;
    View Bare9;
    View Bare10;

    public ProgressBar(Context context)
    {
        super(context);

        //Charger le Layout. Indispensable pour pouvoir manipuler les views qui le compose par la suite
         inflater = LayoutInflater.from(getContext());
        MyView = inflater.inflate(R.layout.progress_bar, this,false);
        addView(MyView);
        setViews();
        Update(5000);
    }

void setViews()
{
    Bare1 = (View) MyView.findViewById(R.id.view1);
    Bare2 = (View) MyView.findViewById(R.id.view2);
    Bare3 = (View) MyView.findViewById(R.id.view3);
    Bare4 = (View) MyView.findViewById(R.id.view4);
    Bare5 = (View) MyView.findViewById(R.id.view5);
    Bare6 = (View) MyView.findViewById(R.id.view6);
    Bare7 = (View) MyView.findViewById(R.id.view7);
    Bare8 = (View) MyView.findViewById(R.id.view8);
    Bare9 = (View) MyView.findViewById(R.id.view9);
    Bare10 = (View) MyView.findViewById(R.id.view10);
}
@RequiresApi(api = Build.VERSION_CODES.M)
public void Update(int amplitude) {
    Bare1.setForeground(getResources().getDrawable(R.color.white));
    Bare2.setForeground(getResources().getDrawable(R.color.white));
    Bare3.setForeground(getResources().getDrawable(R.color.white));
    Bare4.setForeground(getResources().getDrawable(R.color.white));
    Bare5.setForeground(getResources().getDrawable(R.color.white));
    Bare6.setForeground(getResources().getDrawable(R.color.white));
    Bare7.setForeground(getResources().getDrawable(R.color.white));
    Bare8.setForeground(getResources().getDrawable(R.color.white));
    Bare9.setForeground(getResources().getDrawable(R.color.white));
    Bare10.setForeground(getResources().getDrawable(R.color.white));

    switch (TestAmplitude(amplitude)) {
        case (10):
            Bare10.setForeground(getResources().getDrawable(R.color.teal_200));
        case (9):
            Bare9.setForeground(getResources().getDrawable(R.color.teal_200));
        case (8):
            Bare8.setForeground(getResources().getDrawable(R.color.teal_200));
        case (7):
            Bare7.setForeground(getResources().getDrawable(R.color.teal_200));
        case (6):
            Bare6.setForeground(getResources().getDrawable(R.color.teal_200));
        case (5):
            Bare5.setForeground(getResources().getDrawable(R.color.teal_200));
        case (4):
            Bare4.setForeground(getResources().getDrawable(R.color.teal_200));
        case (3):
            Bare3.setForeground(getResources().getDrawable(R.color.teal_200));
        case (2):
            Bare2.setForeground(getResources().getDrawable(R.color.teal_200));
        case (1):
            Bare1.setForeground(getResources().getDrawable(R.color.teal_200));
        case (0):
    }
}

    @RequiresApi(api = Build.VERSION_CODES.M)
    public void UpdateHP(int amplitude)
    {
    Bare1.setForeground(getResources().getDrawable(R.color.white));
    Bare2.setForeground(getResources().getDrawable(R.color.white));
    Bare3.setForeground(getResources().getDrawable(R.color.white));
    Bare4.setForeground(getResources().getDrawable(R.color.white));
    Bare5.setForeground(getResources().getDrawable(R.color.white));
    Bare6.setForeground(getResources().getDrawable(R.color.white));
    Bare7.setForeground(getResources().getDrawable(R.color.white));
    Bare8.setForeground(getResources().getDrawable(R.color.white));
    Bare9.setForeground(getResources().getDrawable(R.color.white));
    Bare10.setForeground(getResources().getDrawable(R.color.white));
    switch (TestAmplitudeHP(amplitude))
    {
        case (10): Bare10.setForeground(getResources().getDrawable(R.color.teal_200));
        case (9): Bare9.setForeground(getResources().getDrawable(R.color.teal_200));
        case (8): Bare8.setForeground(getResources().getDrawable(R.color.teal_200));
        case (7): Bare7.setForeground(getResources().getDrawable(R.color.teal_200));
        case (6): Bare6.setForeground(getResources().getDrawable(R.color.teal_200));
        case (5): Bare5.setForeground(getResources().getDrawable(R.color.teal_200));
        case (4): Bare4.setForeground(getResources().getDrawable(R.color.teal_200));
        case (3): Bare3.setForeground(getResources().getDrawable(R.color.teal_200));
        case (2): Bare2.setForeground(getResources().getDrawable(R.color.teal_200));
        case (1): Bare1.setForeground(getResources().getDrawable(R.color.teal_200));
        case (0):
    }

}

public int TestAmplitude (int amplitude)
{
    if (amplitude==0) {return 0;}
    if (0<amplitude && amplitude<=(500)) {return 1;}
    else if(500<amplitude && amplitude<=1000) {return 2;}
    else if(1000<amplitude && amplitude<=1500) {return 3;}
    else if(1500<amplitude && amplitude<=2000) {return 4;}
    else if(2000<amplitude && amplitude<=2500) {return 5;}
    else if(2500<amplitude && amplitude<=3000) {return 6;}
    else if(3000<amplitude && amplitude<=3500) {return 7;}
    else if(3500<amplitude && amplitude<=4000) {return 8;}
    else if(4000<amplitude && amplitude<=4500) {return 9;}
    else  {return 10;}
}

    public int TestAmplitudeHP (int amplitude)
    {
        if (amplitude==0) {return 0;}
        if (0<amplitude && amplitude<=(1.5)) {return 1;}
        else if(1.5<amplitude && amplitude<=3) {return 2;}
        else if(3<amplitude && amplitude<=4.5) {return 3;}
        else if(4.5<amplitude && amplitude<=6) {return 4;}
        else if(6<amplitude && amplitude<=7.5) {return 5;}
        else if(7.5<amplitude && amplitude<=9) {return 6;}
        else if(9<amplitude && amplitude<=10.5) {return 7;}
        else if(10.5<amplitude && amplitude<=12) {return 8;}
        else if(12<amplitude && amplitude<=13.5) {return 9;}
        else  {return 10;}
    }

}
